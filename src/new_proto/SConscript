Import("env")
CommonObjs = env.Object(['lock_simulator.cc', 'tpcc_lock_gen.cc', 'tpcc_lock_simulator.cc', 'local_work_queue.cc', 'lock_manager.cc', 'lock_wait_queue.cc', 'communication_client.cc', 'direct_queue_lock_client.cc', 'notify_lock_client.cc','lock_client.cc', 'client.cc', 'message_buffer.cc'])
lockSimulation = env.Program(target = 'lock_simulation', source = ['lock_simulation_driver.cc', CommonObjs], LIBS=['rdmacm', 'ibverbs', 'pthread' ,'rt'])
tpccLockSimulation = env.Program(target = 'tpcc_lock_simulation', source = ['tpcc_lock_simulation_driver.cc', CommonObjs], LIBS=['rdmacm', 'ibverbs', 'pthread' ,'rt'])
tpccLockSimulationLocal = env.Program(target = 'tpcc_lock_simulation_local', source = ['tpcc_lock_simulation_driver_local.cc', CommonObjs], LIBS=['rdmacm', 'ibverbs', 'pthread' ,'rt'])
lockSimulationLocal = env.Program(target = 'lock_simulation_local', source = ['lock_simulation_driver_local.cc', CommonObjs], LIBS=['rdmacm', 'ibverbs', 'pthread' ,'rt'])
binaries = [lockSimulation, lockSimulationLocal, tpccLockSimulation, tpccLockSimulationLocal]
Return("binaries")
